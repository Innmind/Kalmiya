#!/usr/bin/env php
<?php
declare(strict_types = 1);

$paths = [
    __DIR__.'/vendor/autoload.php',
    __DIR__ . '/../../../vendor/autoload.php',
];

foreach ($paths as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use function Innmind\Kalmiya\bootstrap;
use Innmind\Kalmiya\HttpTransport\RetryOnNotFound;
use Innmind\CLI\{
    Main,
    Environment,
};
use Innmind\CLI\Framework\Application;
use Innmind\OperatingSystem\OperatingSystem;
use Innmind\Url\Path;
use function Innmind\HttpTransport\bootstrap as http;
use Innmind\TimeWarp\Halt\Usleep;

new class extends Main {
    protected function main(Environment $env, OperatingSystem $os): void
    {
        Application::of($env, $os)
            ->configAt(Path::of(__DIR__.'/config/'))
            ->commands(static fn($env, $os): array => bootstrap(
                $os->filesystem()->mount(Path::of(
                    $env->variables()->get('HOME').'/.kalmiya/',
                )),
                new RetryOnNotFound(
                    http()['exponential_backoff'](
                        $os->remote()->http(),
                        new Usleep,
                        $os->clock(),
                    ),
                    $os->process(),
                ),
                $os->clock(),
                $os->sockets(),
            ))
            ->run();
    }
};
